generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Property {
  id                 String               @id @default(uuid())
  description        String               @db.VarChar(90)
  type               PropertyType
  status             PropertyStatus 
  location           String               @db.VarChar(25)
  contractBeginAt    DateTime             @db.Date
  contractEndingAt   DateTime             @db.Date
  expenses           Expenses[]
  income             Income[]
  property           User?                @relation(fields: [propertyId], references: [id])
  propertyId         String               
}

enum PropertyStatus {
  AvailableToRent
  NotForRent
  Sold
  Rented
}

enum PropertyType {
  Commercial
  Residential
}

model Expenses {
  id                 String               @id @default(uuid())
  name               String               @db.VarChar(90)
  description        String               @db.VarChar(150)
  type               ExpenseType
  status             ExpenseStatus 
  yearOfExpense      DateTime             @db.Date
  paymentDate        DateTime             @db.Date
  property           Property             @relation(fields: [propertyId], references: [id])
  propertyId         String               
  value              Decimal              @db.Decimal(19,4)
}

enum ExpenseType {
  MunicipalTax
  Insurance
  Other
  Condominium
  ExtraCondominium
}

enum ExpenseStatus {
  Paid
  Overdue
}

model Income {
  id                 String               @id @default(uuid())
  name               String?              @db.VarChar(90)
  description        String?              @db.VarChar(150)
  type               IncomeType?
  status             IncomeStatus
  property           Property             @relation(fields: [propertyId], references: [id])
  propertyId         String  
  value              Decimal?             @db.Decimal(19,4)
  paymentDate        DateTime             @db.Date
}

enum IncomeType {
  Rent
  Other
}

enum IncomeStatus {
  Received
  NotReceived
}

model User {
  id                String               @id @default(uuid())
  email             String               @unique
  firstName         String?
  lastName          String?
  password          String?
  tokens            Token[]
  properties        Property[]
}

model Token {
  id                String               @id @default(uuid())
  createdAt         DateTime             @default(now())
  updatedAt         DateTime             @updatedAt
  type              TokenType
  emailToken        String?              @unique//used only for email tokens
  valid             Boolean              @default(true)
  expirtation       DateTime

  user              User                 @relation(fields: [userId], references: [id])
  userId            String
}

enum TokenType {
  email // short lived token sent to user's email
  Api
}


